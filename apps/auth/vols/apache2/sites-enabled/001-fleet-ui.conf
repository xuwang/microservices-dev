ServerName localhost

<VirtualHost *:443>
	ServerAdmin admin@localhost

	ServerName fleet-ui.docker.local
	ServerAlias localhost

	
    ProxyRequests Off
    <Proxy http://fleet-ui:3000>
        Require all Granted
    </Proxy>
   
	# for mellon endpoints
    ProxyPass /mellon/ !
	# for local test scritps
    ProxyPass /cgi-bin/print_mellon_env.pl !
	# for websockets
    ProxyPass /ws/ ws://fleet-ui:3000/ws/
    ProxyPassReverse /ws/ ws://fleet-ui:3000/ws/
	# for all others
    ProxyPass / http://fleet-ui:3000/
    ProxyPassReverse / http://fleet-ui:3000/
	

    <Location "/">  
		# Add information from the mod_auth_mellon session to the request.
	    # </Location> block marker will be added by Puppet.
	    Require all granted
	    Require valid-user
	    AuthType "Mellon"
		
	    MellonEnable "auth"
	    MellonSecureCookie On
		MellonMergeEnvVars On
		MellonSamlResponseDump On
	    #MellonUser "eduPersonPrincipalName"
	    #MellonDecoder "feide"

	    # Configure the SP metadata
	    # This should be the files which were created when creating SP metadata.
	    MellonSPPrivateKeyFile	/etc/apache2/mellon/urn_fleet_ui.key
	    MellonSPCertFile		/etc/apache2/mellon/urn_fleet_ui.cert
	    MellonSPMetadataFile	/etc/apache2/mellon/fleet_ui.xml

	    # IdP metadata. This should be the metadata file you got from the IdP.
	    MellonIdPMetadataFile /etc/apache2/mellon/idp_itlab.xml

	    # The location all endpoints should be located under.
	    # It is the URL to this location that is used as the second parameter to the metadata generation script.
	    # This path is relative to the root of the web server.
	    MellonEndpointPath /mellon

	    #  Can be useful if your SP is behind a reverse proxy or any kind of strange network topology making IP address of client
	    # different for the IdP and the SP.
	    MellonSubjectConfirmationDataAddressCheck Off
    </Location>
	
	CustomLog /dev/stdout combined
	ErrorLog /dev/stderr
	# Possible values include: debug, info, notice, warn, error, crit, alert, emerg.
	LogLevel warn

    ServerSignature Off
	## SSL directives
	SSLEngine on
	SSLProxyEngine On
	SSLCertificateFile      ssl/certs/server.crt
	SSLCertificateKeyFile   ssl/private/server.key
	SSLCACertificatePath    /etc/ssl/certs/
	
</VirtualHost>