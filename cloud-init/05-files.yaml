#cloud-config

#
# cloud-init configration for files
#

write_files:
  - path: /var/lib/skydns/envvars
    permissions: 0644
    owner: root
    content: |
        LOCAL_DOMAIN=docker.local
        LOCAL_DOMAIN_PATH=/skydns/local/docker
        SKYDNS_CONFIG='{"domain":"docker.local", "dns_addr":"0.0.0.0:53", "ttl":3600, "nameservers": ["8.8.8.8:53","8.8.4.4:53"]}'
        SKYDNS_CMD_REPO=https://github.com/xuwang/skydns-docker/releases/download/skydns-7025dba3834f/skydns
  - path: /etc/resolv.conf.skydns
    permissions: 0644
    owner: root
    content: |
        domain docker.local
        search docker.local
        nameserver 127.0.0.1
  - path: /etc//etc/sysctl.d/overcommit_memory.conf
    permissions: 0644
    owner: root
    content: |
        # see http://www.redhat.com/magazine/001nov04/features/vm/
        # may be needed for memory based datastore, e.g. redis
        vm.overcommit_memory = 1
  - path: /etc/profile.d/path.sh
    content: |
        export PATH=$PATH:/var/lib/apps/bin
  - path: /etc/profile.d/alias.sh
    content: |
        alias lal="ls -al"
        alias ll="ls -l"
        alias dk="docker "
        alias dkc="dk ps"
        alias dkm="dk images"
        alias dki="dk inspect"
        alias dkb="dk build"
        alias cleandkc="dkc -a --no-trunc| grep Exit | awk '{print \$1}' | xargs -L 1 -r docker rm"
        alias cleandkm="dkm -a --no-trunc | grep none | awk '{print \$3}' | xargs -L 1 -r docker rmi"
        alias cleandk="cleandkc && cleandkm"
        alias sd="sudo systemctl"
        alias sdl="sd list-units"
        alias sds="sd status"
        alias sdcat="sd cat"
        alias cci="sudo coreos-cloudinit --from-file"
        alias j="journalctl"
        alias jfu="journalctl -f -u"
        alias e="etcdctl"
        alias els="e ls --recursive"
        alias eget="e get"
        alias eset="e set"
        alias f="fleetctl -strict-host-key-checking=false"
        alias fcat="f cat"
        alias fss="f status"
        alias fst="f start"
        alias fdy="f destroy"
        alias flm="f list-machines"
        alias flu="f list-units"
        alias fsh="f ssh"
        function dkip() { docker inspect --format "{{ .NetworkSettings.IPAddress }}" $1 ; }
        function dkid() { docker inspect --format "{{ .ID }}" $1 ; }
        function dkim() { docker inspect --format "{{ .Image }}" $1 ; }
        function dkst() { docker inspect --format "{{ .State.Running }}" $1 ; }
        function sdrit() { sudo docker start-i -t $1 bash ; }
        function nsa { sudo nsenter -p -u -m -i -n -t $(docker inspect -f "{{ .State.Pid }}" $1) ; }
# end of files
        
